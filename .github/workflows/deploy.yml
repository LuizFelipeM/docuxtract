name: Build and Deploy to Vultr VKE

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build Python API 🐍
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Log in to Container Registry 👤
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ewr.vultrcr.com/dltagg
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker 🔎
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: dltagg/docuxtract-backend

      - name: Build and push Docker image 🐳
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./docker/Dockerfile.backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    name: Deploy to Kubernetes ☸️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        
      - name: Create kubeconfig 🔧
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config

      # - name: Use context 🌎
      #   run: kubectl config use-context octobay-api

      # To do:
      # Split kubernetes file in multiple files and add to k8s folder
      # - name: Deploy to K8S 
      #   run: kubectl apply -f k8s/
      
      - name: Deploy to K8S ☸️
        run: kubectl apply -f kubernetes.yml